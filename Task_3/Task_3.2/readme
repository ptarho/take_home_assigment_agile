Проблема цієї задачі полягає в тому, що ми не можемо перевірити, чи нам не вистачає футболок, не перебираючи всі можливі комбінації. Крім того, зі зростанням кількості учасників час, необхідний для виконання алгоритму, буде рости експоненційно.

Мій алгоритм базується на масиві, що містить кількість футболок, яку учасники вказали як єдиний можливий розмір. Для кожного учасника кількість комбінацій подвоюється, але лише у тому випадку, якщо всі комбінації є дійсними (тобто пройшли перевірку за допомогою функції isValidCombination()).

Якщо уявити всі можливі комбінації у вигляді бінарного дерева, то зараз ми ітеруємося рівень за рівнем, доки не знайдемо комбінацію, яка задовольняє наші вимоги. Проте ми можемо покращити цей алгоритм, якщо будемо ітеруватися не по всім можливим комбінаціям одразу, а лише по одній гілці, доки комбінація не стане непридатною або не задовольнить нашу умову. У найгіршому випадку нам все ще доведеться перевірити всі гілки бінарного дерева, щоб впевнитись у недостачі необхідних футболок. Але при найкращому розвитку подій ми зможемо знайти задовілну комбінацію за одну ітерацію по дереву.